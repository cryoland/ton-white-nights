version: '3.4'

services:
  # wn_db_mssql:
  #   image: mcr.microsoft.com/mssql/server:2019-latest   
  #   container_name: wn_db_mssql
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - .volumes/mssql/wn_db_mssql/data:/var/opt/mssql/data
  #     - .volumes/mssql/wn_db_mssql/log:/var/opt/mssql/log
  #     - .volumes/mssql/wn_db_mssql/secrets:/var/opt/mssql/secrets
  #   environment:
  #     - SA_PASSWORD=${MSSQL_DB_PASSWORD}
  #     - ACCEPT_EULA=Y
  #     - MSSQL_PID=Express

  cms_db_mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest   
    container_name: cms_db_mssql
    ports:
      - "11433:1433"
    volumes:
      - .volumes/mssql/cms_db_mssql/data:/var/opt/mssql/data
      - .volumes/mssql/cms_db_mssql/log:/var/opt/mssql/log
      - .volumes/mssql/cms_db_mssql/secrets:/var/opt/mssql/secrets
    environment:
      - SA_PASSWORD=${MSSQL_DB_PASSWORD_CMS}
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express

  cms:
    build:
      context: ./src/backend/cms
      dockerfile: Dockerfile
    ports:
      - '63761:63761'
      - '44326:44326'
    volumes:
      - ./src/backend/cms/wwwroot/media:/app/wwwroot/media
      - ~/.aspnet/https:/https:ro
      # - ./src/backend/cms/Views:/app/Views
      # - ./src/backend/cms/uSync:/app/uSync
      # - ./src/backend/cms/umbraco:/app/umbraco
    environment:
      - ASPNETCORE_HTTP_PORTS=63761
      - ASPNETCORE_HTTPS_PORTS=44326
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT_CMS}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS_CMS}
      - ConnectionStrings__umbracoDbDSN=${ConnectionStrings__cmsDbDSN}
      - ConnectionStrings__ProviderName=${ConnectionStrings__cmsDbProvider}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${Certificates__Default__Password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=${Certificates__Default__Path}
    restart: on-failure
    depends_on:
      - cms_db_mssql

  api:
    build:
      context: ./src/backend/api
      dockerfile: Dockerfile
    ports:
      - '8090:8090'
    environment:
      - API_AUTH_TOKEN=${API_AUTH_TOKEN}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT_API}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS_API}
      - ConnectionStrings__apiDbDSN=${ConnectionStrings__apiDbDSN}
    restart: on-failure
  #  depends_on:
  #    - wn_db_mssql

  bot:
    build:
      context: ./src/backend/bot
      dockerfile: Dockerfile
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
    depends_on:
      - api
    restart: on-failure

  tma_frontend:
    image: node:21.7.3-alpine3.20
    working_dir: /usr/src/app
    ports:
      - '5173:5173'
    volumes:
      - ./src/frontend/tma:/usr/src/app
    environment:
      - API_DOMAIN=${API_DOMAIN}
      - API_AUTH_TOKEN=${API_AUTH_TOKEN}
    command: sh -c "npm install && npm run dev-host"
    depends_on:
      - api

  ngrok_tma:
    image: ngrok/ngrok:3.10.0-alpine
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN_1}
    command: 'http --domain="$TMA_DOMAIN" tma_frontend:5173'
    ports:
      - '4040:4040'
    expose:
      - '4040'
    depends_on:
      - tma_frontend

  ngrok_api:
    image: ngrok/ngrok:3.10.0-alpine
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN_2}
    command: 'http --domain="$API_DOMAIN" api:8090'
    ports:
      - '4041:4040'
    expose:
      - '4041'
    depends_on:
      - tma_frontend